# Generated by Django 4.2.7 on 2025-09-25 10:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'Truck Owner')], default='user', max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_delivery_time', models.DurationField(help_text='Estimated delivery duration')),
                ('message', models.TextField(blank=True, help_text='Additional message to admin', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('response_message', models.TextField(blank=True, help_text='Admin response message', null=True)),
            ],
            options={
                'ordering': ['amount'],
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truck_type', models.CharField(choices=[('mini', 'Mini Truck'), ('small', 'Small Truck'), ('medium', 'Medium Truck'), ('large', 'Large Truck'), ('trailer', 'Trailer')], max_length=20)),
                ('capacity', models.DecimalField(decimal_places=2, help_text='Capacity in tons', max_digits=10)),
                ('registration_number', models.CharField(max_length=20, unique=True)),
                ('make_model', models.CharField(help_text='e.g., Tata 407', max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('busy', 'Busy'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive')], default='available', max_length=20)),
                ('current_location', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trucks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('load_type', models.CharField(choices=[('electronics', 'Electronics'), ('furniture', 'Furniture'), ('food_items', 'Food Items'), ('construction', 'Construction Materials'), ('automotive', 'Automotive Parts'), ('textiles', 'Textiles'), ('chemicals', 'Chemicals'), ('machinery', 'Machinery'), ('other', 'Other')], max_length=20)),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in tons', max_digits=10)),
                ('truck_type', models.CharField(choices=[('mini', 'Mini Truck'), ('small', 'Small Truck'), ('medium', 'Medium Truck'), ('large', 'Large Truck'), ('trailer', 'Trailer')], max_length=20)),
                ('from_location', models.CharField(max_length=255)),
                ('to_location', models.CharField(max_length=255)),
                ('pickup_date', models.DateTimeField()),
                ('delivery_date', models.DateTimeField()),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('open', 'Open for Bidding'), ('closed', 'Bidding Closed'), ('assigned', 'Assigned'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='open', max_length=20)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bidding_end_date', models.DateTimeField()),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('pickup_scheduled', 'Pickup Scheduled'), ('loaded', 'Loaded'), ('on_the_way', 'On The Way'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial Payment'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('actual_pickup_time', models.DateTimeField(blank=True, null=True)),
                ('actual_delivery_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_delivery_time', models.DateTimeField(blank=True, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=100, null=True)),
                ('driver_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('driver_license', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, help_text='Rating out of 5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted_bid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='core.bid')),
                ('requirement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='core.requirement')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.truck')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('bid_placed', 'Bid Placed'), ('bid_accepted', 'Bid Accepted'), ('bid_rejected', 'Bid Rejected'), ('order_status_changed', 'Order Status Changed'), ('new_requirement', 'New Requirement'), ('payment_received', 'Payment Received'), ('system', 'System Notification')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.bid')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.order')),
                ('requirement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.requirement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('speed', models.DecimalField(blank=True, decimal_places=2, help_text='Speed in km/h', max_digits=5, null=True)),
                ('heading', models.DecimalField(blank=True, decimal_places=2, help_text='Direction in degrees', max_digits=5, null=True)),
                ('altitude', models.DecimalField(blank=True, decimal_places=2, help_text='Altitude in meters', max_digits=8, null=True)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, help_text='GPS accuracy in meters', max_digits=8, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='core.order')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='bid',
            name='requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='core.requirement'),
        ),
        migrations.AddField(
            model_name='bid',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='core.truck'),
        ),
        migrations.AddField(
            model_name='bid',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='truck',
            index=models.Index(fields=['user', 'status'], name='core_truck_user_id_a82029_idx'),
        ),
        migrations.AddIndex(
            model_name='truck',
            index=models.Index(fields=['truck_type', 'status'], name='core_truck_truck_t_eb27dd_idx'),
        ),
        migrations.AddIndex(
            model_name='requirement',
            index=models.Index(fields=['status', 'pickup_date'], name='core_requir_status_e3ed95_idx'),
        ),
        migrations.AddIndex(
            model_name='requirement',
            index=models.Index(fields=['truck_type', 'status'], name='core_requir_truck_t_38ae61_idx'),
        ),
        migrations.AddIndex(
            model_name='requirement',
            index=models.Index(fields=['admin', 'status'], name='core_requir_admin_i_068d59_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'status'], name='core_order_user_id_4407f8_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status', 'created_at'], name='core_order_status_273d1f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='core_notifi_user_id_cb8f07_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'created_at'], name='core_notifi_user_id_7862c3_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['order', 'timestamp'], name='core_locati_order_i_16d6bd_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['requirement', 'status'], name='core_bid_require_961e45_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['user', 'status'], name='core_bid_user_id_bb795e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bid',
            unique_together={('requirement', 'user', 'truck')},
        ),
    ]
